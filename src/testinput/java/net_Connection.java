/**
 * Note: this class is generated by Toradocu from {@link net.Connection} in the testinput source set.
 * It should not be edited directly, but should be replaced by the Toradocu generated file if
 * {@link net.Connection} is changed.
 */
public class net_Connection {

    // void net.Connection.open()
    public static boolean m1_t0(Object receiver, Object... args) {
        // @throws java.lang.IllegalStateException if the connection is already open ==> target.isOpen()
        return ((net.Connection) receiver).isOpen();
    }

    // void net.Connection.send(java.lang.String message)
    public static boolean m2_t0(Object receiver, Object... args) {
        // @throws java.lang.NullPointerException if message is null ==> args[0]==null
        return ((java.lang.String) args[0]) == null;
    }

    // void net.Connection.send(java.lang.String message)
    public static boolean m2_t1(Object receiver, Object... args) {
        // @throws java.lang.IllegalStateException if the connection is not open ==> (target.isOpen()) == false
        return (((net.Connection) receiver).isOpen()) == false;
    }

    // void net.Connection.send(int code)
    public static boolean m3_t0(Object receiver, Object... args) {
        // @throws java.lang.IllegalStateException if the connection is not open ==> (target.isOpen()) == false
        return (((net.Connection) receiver).isOpen()) == false;
    }

    // void net.Connection.send(int code)
    public static boolean m3_p0(Object receiver, Object... args) {
        // @param code the code, must be positive ==> args[0]>0
        return ((int) args[0]) > 0;
    }
}
